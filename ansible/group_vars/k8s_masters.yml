# Kubernetes Master nodes configuration

# Kubernetes control plane configuration
k8s_control_plane_endpoint: "{{ k8s_master_1_ip }}:6443"
k8s_apiserver_advertise_address: "{{ ansible_default_ipv4.address }}"
k8s_apiserver_cert_extra_sans:
  - "{{ k8s_master_1_ip }}"
  - "{{ k8s_master_2_ip }}"
  - "{{ k8s_master_3_ip }}"
  - "{{ k8s_cluster_name }}.local"
  - "kubernetes"
  - "kubernetes.default"
  - "kubernetes.default.svc"
  - "kubernetes.default.svc.cluster.local"

# Etcd configuration
etcd_data_dir: "/var/lib/etcd"
etcd_backup_dir: "/var/lib/etcd-backup"
etcd_backup_schedule: "0 3 * * *"  # Daily at 3 AM

# Kubernetes API server configuration
k8s_api_server_args:
  - "--advertise-address={{ k8s_apiserver_advertise_address }}"
  - "--allow-privileged=true"
  - "--authorization-mode=Node,RBAC"
  - "--client-ca-file=/etc/kubernetes/pki/ca.crt"
  - "--enable-admission-plugins=NodeRestriction"
  - "--enable-bootstrap-token-auth=true"
  - "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt"
  - "--etcd-certfile=/etc/kubernetes/pki/etcd/server.crt"
  - "--etcd-keyfile=/etc/kubernetes/pki/etcd/server.key"
  - "--etcd-servers=https://127.0.0.1:2379"
  - "--insecure-port=0"
  - "--kubelet-certificate-authority=/etc/kubernetes/pki/ca.crt"
  - "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt"
  - "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key"
  - "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname"
  - "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt"
  - "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key"
  - "--requestheader-allowed-names=front-proxy-client"
  - "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt"
  - "--requestheader-extra-headers-prefix=X-Remote-Extra-"
  - "--requestheader-group-headers=X-Remote-Group"
  - "--requestheader-username-headers=X-Remote-User"
  - "--secure-port=6443"
  - "--service-account-key-file=/etc/kubernetes/pki/sa.pub"
  - "--service-cluster-ip-range={{ k8s_service_cidr }}"
  - "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt"
  - "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"

# Controller manager configuration
k8s_controller_manager_args:
  - "--bind-address=0.0.0.0"
  - "--cluster-cidr={{ k8s_pod_cidr }}"
  - "--cluster-name={{ k8s_cluster_name }}"
  - "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt"
  - "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key"
  - "--controllers=*,bootstrapsigner,tokencleaner"
  - "--kubeconfig=/etc/kubernetes/controller-manager.conf"
  - "--leader-elect=true"
  - "--root-ca-file=/etc/kubernetes/pki/ca.crt"
  - "--service-account-private-key-file=/etc/kubernetes/pki/sa.key"
  - "--use-service-account-credentials=true"

# Scheduler configuration
k8s_scheduler_args:
  - "--bind-address=0.0.0.0"
  - "--kubeconfig=/etc/kubernetes/scheduler.conf"
  - "--leader-elect=true"

# Kubelet configuration
k8s_kubelet_config:
  kind: "KubeletConfiguration"
  apiVersion: "kubelet.config.k8s.io/v1beta1"
  authentication:
    anonymous:
      enabled: false
    webhook:
      enabled: true
    x509:
      clientCAFile: "/etc/kubernetes/pki/ca.crt"
  authorization:
    mode: "Webhook"
  clusterDomain: "{{ k8s_dns_domain }}"
  clusterDNS:
    - "10.96.0.10"
  cgroupDriver: "systemd"
  containerRuntimeEndpoint: "unix:///var/run/containerd/containerd.sock"
  podCIDR: "{{ k8s_pod_cidr }}"
  resolvConf: "/etc/resolv.conf"
  rotateCertificates: true
  serverTLSBootstrap: true

# Kube-proxy configuration
k8s_kube_proxy_config:
  kind: "KubeProxyConfiguration"
  apiVersion: "kubeproxy.config.k8s.io/v1alpha1"
  mode: "iptables"
  clusterCIDR: "{{ k8s_pod_cidr }}"
  iptables:
    masqueradeAll: true
    masqueradeBit: 14
    minSyncPeriod: "0s"
    syncPeriod: "30s"
  ipvs:
    scheduler: "rr"
    strictARP: true
  featureGates:
    "SupportIPVSProxyMode": true

# High availability configuration
k8s_ha_enabled: true
k8s_load_balancer_vip: "{{ k8s_master_1_ip }}"
k8s_keepalived_priority: 100
k8s_keepalived_interface: "{{ ansible_default_interface }}"
