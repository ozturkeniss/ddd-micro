# DDD Microservices Ansible Inventory

all:
  children:
    # Kubernetes Control Plane
    k8s_masters:
      hosts:
        k8s-master-1:
          ansible_host: "{{ k8s_master_1_ip }}"
          ansible_user: "{{ k8s_user }}"
          ansible_ssh_private_key_file: "{{ k8s_ssh_key }}"
        k8s-master-2:
          ansible_host: "{{ k8s_master_2_ip }}"
          ansible_user: "{{ k8s_user }}"
          ansible_ssh_private_key_file: "{{ k8s_ssh_key }}"
        k8s-master-3:
          ansible_host: "{{ k8s_master_3_ip }}"
          ansible_user: "{{ k8s_user }}"
          ansible_ssh_private_key_file: "{{ k8s_ssh_key }}"
      vars:
        node_type: master
        k8s_role: control-plane

    # Kubernetes Worker Nodes
    k8s_workers:
      hosts:
        k8s-worker-1:
          ansible_host: "{{ k8s_worker_1_ip }}"
          ansible_user: "{{ k8s_user }}"
          ansible_ssh_private_key_file: "{{ k8s_ssh_key }}"
        k8s-worker-2:
          ansible_host: "{{ k8s_worker_2_ip }}"
          ansible_user: "{{ k8s_user }}"
          ansible_ssh_private_key_file: "{{ k8s_ssh_key }}"
        k8s-worker-3:
          ansible_host: "{{ k8s_worker_3_ip }}"
          ansible_user: "{{ k8s_user }}"
          ansible_ssh_private_key_file: "{{ k8s_ssh_key }}"
      vars:
        node_type: worker
        k8s_role: worker

    # Database Servers
    databases:
      hosts:
        postgres-primary:
          ansible_host: "{{ postgres_primary_ip }}"
          ansible_user: "{{ db_user }}"
          ansible_ssh_private_key_file: "{{ db_ssh_key }}"
        postgres-replica:
          ansible_host: "{{ postgres_replica_ip }}"
          ansible_user: "{{ db_user }}"
          ansible_ssh_private_key_file: "{{ db_ssh_key }}"
        redis-primary:
          ansible_host: "{{ redis_primary_ip }}"
          ansible_user: "{{ db_user }}"
          ansible_ssh_private_key_file: "{{ db_ssh_key }}"
        kafka-broker-1:
          ansible_host: "{{ kafka_broker_1_ip }}"
          ansible_user: "{{ db_user }}"
          ansible_ssh_private_key_file: "{{ db_ssh_key }}"
        kafka-broker-2:
          ansible_host: "{{ kafka_broker_2_ip }}"
          ansible_user: "{{ db_user }}"
          ansible_ssh_private_key_file: "{{ db_ssh_key }}"
        kafka-broker-3:
          ansible_host: "{{ kafka_broker_3_ip }}"
          ansible_user: "{{ db_user }}"
          ansible_ssh_private_key_file: "{{ db_ssh_key }}"
      vars:
        node_type: database

    # Monitoring Servers
    monitoring:
      hosts:
        prometheus:
          ansible_host: "{{ prometheus_ip }}"
          ansible_user: "{{ monitoring_user }}"
          ansible_ssh_private_key_file: "{{ monitoring_ssh_key }}"
        grafana:
          ansible_host: "{{ grafana_ip }}"
          ansible_user: "{{ monitoring_user }}"
          ansible_ssh_private_key_file: "{{ monitoring_ssh_key }}"
        jaeger:
          ansible_host: "{{ jaeger_ip }}"
          ansible_user: "{{ monitoring_user }}"
          ansible_ssh_private_key_file: "{{ monitoring_ssh_key }}"
      vars:
        node_type: monitoring

    # Load Balancer
    load_balancers:
      hosts:
        nginx-lb-1:
          ansible_host: "{{ nginx_lb_1_ip }}"
          ansible_user: "{{ lb_user }}"
          ansible_ssh_private_key_file: "{{ lb_ssh_key }}"
        nginx-lb-2:
          ansible_host: "{{ nginx_lb_2_ip }}"
          ansible_user: "{{ lb_user }}"
          ansible_ssh_private_key_file: "{{ lb_ssh_key }}"
      vars:
        node_type: load_balancer

  vars:
    # Global variables
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    
    # Environment
    environment: "{{ env | default('dev') }}"
    
    # Kubernetes configuration
    k8s_version: "1.28.0"
    k8s_cni: "calico"
    k8s_pod_cidr: "10.244.0.0/16"
    k8s_service_cidr: "10.96.0.0/12"
    
    # Container runtime
    container_runtime: "containerd"
    containerd_version: "1.7.0"
    
    # Helm configuration
    helm_version: "3.12.0"
    
    # Monitoring
    prometheus_version: "2.45.0"
    grafana_version: "10.0.0"
    jaeger_version: "1.45.0"
