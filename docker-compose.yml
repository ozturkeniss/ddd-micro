version: '3.8'

services:
  # PostgreSQL Database for User Service
  user-db:
    image: postgres:15-alpine
    container_name: user-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_service_db
    ports:
      - "5432:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - ddd-micro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: .
      dockerfile: dockerfiles/user.dockerfile
    container_name: user-service
    environment:
      PORT: 8080
      GIN_MODE: release
      DB_HOST: user-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: user_service_db
      DB_SSLMODE: disable
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      user-db:
        condition: service_healthy
    networks:
      - ddd-micro-network
    restart: unless-stopped

  # PostgreSQL Database for Product Service
  product-db:
    image: postgres:15-alpine
    container_name: product-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: product_service_db
    ports:
      - "5433:5432"
    volumes:
      - product_db_data:/var/lib/postgresql/data
    networks:
      - ddd-micro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database for Basket Service
  basket-db:
    image: postgres:15-alpine
    container_name: basket-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: basket_service_db
    ports:
      - "5434:5432"
    volumes:
      - basket_db_data:/var/lib/postgresql/data
    networks:
      - ddd-micro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database for Payment Service
  payment-db:
    image: postgres:15-alpine
    container_name: payment-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payment_service_db
    ports:
      - "5435:5432"
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - ddd-micro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ddd-micro-network:
    driver: bridge

volumes:
  user_db_data:
  product_db_data:
  basket_db_data:
  payment_db_data:

