# Global values
global:
  namespace: ddd-micro
  imageRegistry: ""
  imagePullSecrets: []

# PostgreSQL configurations for each service
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "postgres"
    password: "postgres"
    database: "user_service_db"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

postgresql-product:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "postgres"
    password: "postgres"
    database: "product_service_db"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

postgresql-basket:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "postgres"
    password: "postgres"
    database: "basket_service_db"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

postgresql-payment:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "postgres"
    password: "postgres"
    database: "payment_service_db"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

# Redis configuration
redis:
  enabled: true

# Kafka configuration  
kafka:
  enabled: true

# PostgreSQL subcharts
postgresql-product:
  enabled: true

postgresql-basket:
  enabled: true

postgresql-payment:
  enabled: true

# Microservices configurations
userService:
  enabled: true
  image:
    repository: ddd-micro/user-service
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

productService:
  enabled: true
  image:
    repository: ddd-micro/product-service
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    httpPort: 8081
    grpcPort: 9091
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

basketService:
  enabled: true
  image:
    repository: ddd-micro/basket-service
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    httpPort: 8083
    grpcPort: 9093
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

paymentService:
  enabled: true
  image:
    repository: ddd-micro/payment-service
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8084
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

krakend:
  enabled: true
  image:
    repository: devopsfaith/krakend
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: 8080
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
