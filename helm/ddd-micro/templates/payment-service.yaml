{{- if .Values.paymentService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: payment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: payment-service
        image: "{{ .Values.global.imageRegistry }}{{ .Values.paymentService.image.repository }}:{{ .Values.paymentService.image.tag }}"
        imagePullPolicy: {{ .Values.paymentService.image.pullPolicy }}
        ports:
        - containerPort: 8084
        env:
        - name: HTTP_PORT
          value: "8084"
        - name: GIN_MODE
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: GIN_MODE
        - name: DB_HOST
          value: "postgresql-payment"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: POSTGRES_PASSWORD
        - name: DB_NAME
          value: "payment_service_db"
        - name: DB_SSLMODE
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: DB_SSLMODE
        - name: USER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: USER_SERVICE_URL
        - name: PRODUCT_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: PRODUCT_SERVICE_URL
        - name: BASKET_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: BASKET_SERVICE_URL
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: ddd-micro-config
              key: KAFKA_BROKERS
        resources:
          {{- toYaml .Values.paymentService.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: payment-service
spec:
  type: {{ .Values.paymentService.service.type }}
  ports:
  - port: {{ .Values.paymentService.service.port }}
    targetPort: 8084
    protocol: TCP
    name: http
  selector:
    app: payment-service
{{- end }}
