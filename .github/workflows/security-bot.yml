name: 🔒 Security Bot

on:
  schedule:
    # Haftalık güvenlik taraması (Pazartesi 03:00 UTC)
    - cron: '0 3 * * 1'
  push:
    paths:
      - 'go.mod'
      - 'go.sum'
      - 'client/package.json'
      - 'client/package-lock.json'
  workflow_dispatch:

jobs:
  security-scan:
    name: 🔒 Security Scanner
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Go Security Scan
      run: |
        echo "🔍 Running Go security scan..."
        
        # Install gosec
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        
        # Run security scan
        $(go env GOPATH)/bin/gosec ./... > security-report.txt 2>&1 || true
        
        # Check for high severity issues
        if grep -q "HIGH" security-report.txt; then
          echo "⚠️ High severity security issues found!"
          cat security-report.txt
        else
          echo "✅ No high severity security issues found"
        fi
    
    - name: Dependency Security Check
      run: |
        echo "🔍 Checking for vulnerable dependencies..."
        
        # Install govulncheck
        go install golang.org/x/vuln/cmd/govulncheck@latest
        
        # Run vulnerability check
        $(go env GOPATH)/bin/govulncheck ./... > vuln-report.txt 2>&1 || true
        
        # Check if there are vulnerabilities
        if grep -q "VULNERABILITIES" vuln-report.txt; then
          echo "⚠️ Vulnerable dependencies found!"
          cat vuln-report.txt
        else
          echo "✅ No vulnerable dependencies found"
        fi
    
    - name: Frontend Security Scan
      run: |
        echo "🔍 Running frontend security scan..."
        
        cd client
        
        # Install audit tools
        npm install -g npm-audit-fix
        
        # Run npm audit
        npm audit --audit-level=high > ../frontend-security-report.txt 2>&1 || true
        
        # Check for high severity issues
        if grep -q "high" ../frontend-security-report.txt; then
          echo "⚠️ High severity frontend security issues found!"
          cat ../frontend-security-report.txt
        else
          echo "✅ No high severity frontend security issues found"
        fi
    
    - name: Auto-fix Security Issues
      run: |
        echo "🔧 Attempting to auto-fix security issues..."
        
        # Try to fix Go vulnerabilities
        go get -u ./...
        go mod tidy
        
        # Try to fix npm vulnerabilities
        cd client
        npm audit fix --audit-level=high || true
        npm audit fix --force || true
        
        cd ..
        
        # Check if there are changes
        if ! git diff --quiet; then
          echo "🔧 Security fixes applied, committing..."
          git config --local user.email "security-bot@ddd-micro.com"
          git config --local user.name "🔒 Security Bot"
          git add .
          git commit -m "🔒 Auto-fix: Apply security patches

        - Updated vulnerable dependencies
        - Applied security patches
        - Auto-committed by security bot"
          git push
          echo "✅ Security fixes applied and committed"
        else
          echo "✅ No security fixes needed"
        fi
    
    - name: Generate Security Report
      run: |
        echo "📊 Generating security report..."
        
        CURRENT_DATE=$(date '+%Y-%m-%d')
        
        # Create comprehensive security report
        cat > security-report-$CURRENT_DATE.md << EOF
        # 🔒 Security Report - $CURRENT_DATE
        
        ## 📊 Scan Summary
        - **Scan Date:** $(date '+%Y-%m-%d %H:%M:%S UTC')
        - **Go Version:** $(go version)
        - **Node Version:** $(node --version)
        
        ## 🔍 Go Security Scan Results
        \`\`\`
        $(cat security-report.txt || echo "No issues found")
        \`\`\`
        
        ## 🔍 Vulnerability Scan Results
        \`\`\`
        $(cat vuln-report.txt || echo "No vulnerabilities found")
        \`\`\`
        
        ## 🔍 Frontend Security Scan Results
        \`\`\`
        $(cat frontend-security-report.txt || echo "No issues found")
        \`\`\`
        
        ## ✅ Recommendations
        1. Regularly update dependencies
        2. Review and address any HIGH severity issues
        3. Monitor for new security advisories
        4. Consider using dependency scanning tools in CI/CD
        
        ---
        *Generated by Security Bot 🔒*
        EOF
        
        # Commit security report
        git config --local user.email "security-bot@ddd-micro.com"
        git config --local user.name "🔒 Security Bot"
        git add security-report-$CURRENT_DATE.md
        git commit -m "🔒 Security: Weekly security scan report for $CURRENT_DATE

        - Generated comprehensive security report
        - Scanned Go and frontend dependencies
        - Auto-committed by security bot"
        git push
        echo "✅ Security report generated and committed"
    
    - name: Clean up old reports
      run: |
        echo "🧹 Cleaning up old security reports..."
        
        # Remove security reports older than 30 days
        find . -name "security-report-*.md" -type f -mtime +30 -delete || true
        find . -name "daily-summary-*.md" -type f -mtime +30 -delete || true
        
        # Check if there are changes
        if ! git diff --quiet; then
          echo "🧹 Old reports cleaned up, committing..."
          git config --local user.email "security-bot@ddd-micro.com"
          git config --local user.name "🔒 Security Bot"
          git add .
          git commit -m "🧹 Cleanup: Remove old security reports

        - Removed security reports older than 30 days
        - Auto-committed by security bot"
          git push
          echo "✅ Old reports cleaned up and committed"
        else
          echo "✅ No cleanup needed"
        fi
